app: demo-shop-service
service: products-api
org: acwilsontech

provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  region: us-east-1
  environment:
    PRODUCTS_TABLE_NAME: ${self:service}-products-${sls:stage}
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Scan*'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-products-${sls:stage}

package:
  individually: true

functions:
  healthCheck:
    handler: src/healthCheck.handler
    events:
      - http:
          path: /health
          method: get
  createProduct:
    handler: src/products/createProduct.handler
    events:
      - http:
          path: /products
          method: post
  getProduct:
      handler: src/products/getProduct.handler
      events:
        - http:
            path: /products/{productId}
            method: get
  getProducts:
      handler: src/products/getProducts.handler
      events:
        - http:
            path: /products
            method: get
  updateProduct:
      handler: src/products/updateProduct.handler
      events:
        - http:
            path: /products
            method: put
  deleteProduct:
      handler: src/products/deleteProduct.handler
      events:
        - http:
            path: /products/{productId}
            method: delete

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-products-${sls:stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

