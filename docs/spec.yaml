openapi: 3.0.0
info:
  title: Inventory Management API
  version: 1.0.0
  description: API for managing users and products in the inventory management system.

paths:
  /auth/signup:
    post:
      summary: Sign up a new user
      operationId: signupUser
      security: []
      requestBody:
        description: User sign up details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupUser'
      responses:
        '200':
          description: User signed up successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: Log in an existing user
      operationId: loginUser
      security: []
      requestBody:
        description: User login details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products:
    get:
      summary: Get a list of all products
      operationId: getProducts
      security:
        - CognitoAuth: ['read']
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Add a new product
      operationId: addProduct
      security:
        - CognitoAuth: ['admin']
      requestBody:
        description: Product details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product added successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products/{productId}:
    get:
      summary: Get details of a specific product
      operationId: getProduct
      security:
        - CognitoAuth: ['read']
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a product by ID
      operationId: updateProduct
      security:
        - CognitoAuth: ['admin']
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Updated product details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete a product by ID
      operationId: deleteProduct
      security:
        - CognitoAuth: ['admin']
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    get:
      summary: Get a list of all users
      operationId: getUsers
      security:
        - CognitoAuth: ['admin']
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{userId}:
    delete:
      summary: Delete a user by ID
      operationId: deleteUser
      security:
        - CognitoAuth: ['admin']
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update the role of a user
      operationId: updateUserRole
      security:
        - CognitoAuth: ['admin']
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: New role for the user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
      responses:
        '200':
          description: User role updated successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:

    schemas:
      Product:
        type: object
        properties:
          productId:
            type: string
          name:
            type: string
          price:
            type: number
          description:
            type: string
  
      User:
        type: object
        properties:
          userId:
            type: string
          username:
            type: string
          password:
            type: string
          role:
            type: string
  
      SignupUser:
        type: object
        properties:
          username:
            type: string
          password:
            type: string
          email:
            type: string
        required:
          - username
          - password
          - email
  
      LoginUser:
        type: object
        properties:
          username:
            type: string
          password:
            type: string
        required:
          - username
          - password
          
      Error:
        type: object
        properties:
          message: 
            type: string
        required:
          - message

security:
  CognitoAuth:
    type: apiKey
    in: header
    name: Authorization